#! /bin/bash

# Basic imports

option=$1
parameter=$2
parameter2=$3

disable_done=False

random_sleep_progress_bar=$(echo -e $(( $RANDOM % 8 + 1 )))

bold=$(tput bold)
normal=$(tput sgr0)

Color_Off='\033[0m'       # Text Reset

# Check if config file exist

function CheckConfigFile {
      ConfigFileCheck=$HOME/cromha-manager-config.yaml
      if test -f "$ConfigFileCheck"; then
            sleep .1
      else
            echo -e "${bold}ERROR:Couldn't locate config file at $HOME/cromha-manager-config.yaml. Please get a config file by running 'cromha-manager-ctl upgrade' or by running the install.sh script provided in the github repo"
      fi
}

# Functions

# Progress bar

function ProgressBar () {
      for i in {1..100}; do
	output="\r"

	output="$output ["
	total=$i
	count=0

	while [ $count -lt $total ]; do
		output="$output${progress_bar_full}"
		let count=$count+3
	done

	let total=100-$total
	count=0

	while [ $count -lt $total ]; do
		output="${output}${progress_bar_none}" 
		let count=$count+3
	done
	output="$output ] $i/100%"
	echo -ne "$output"

      random_sleep_progress_bar=0.1
	sleep $random_sleep_progress_bar
done
echo -e " ${B2}$progress_bar_done${Color_Off}"
}

function ProgressBarSlow () {
      for i in {1..100}; do
	output="\r"

	output="$output ["
	total=$i
	count=0

	while [ $count -lt $total ]; do
		output="$output${progress_bar_full}"
		let count=$count+3
	done

	let total=100-$total
	count=0

	while [ $count -lt $total ]; do
		output="${output}${progress_bar_none}" 
		let count=$count+3
	done
	output="$output ] $i/100%"
	echo -ne "$output"

      random_sleep_progress_bar=$(echo -e "$(( ($RANDOM / 2500 + 1)))")
	sleep $random_sleep_progress_bar
done
echo -e " ${B2}$progress_bar_done${Color_Off}"
}

function ProgressBarFast () {
      for i in {1..100}; do
	output="\r"

	output="$output ["
	total=$i
	count=0

	while [ $count -lt $total ]; do
		output="$output${progress_bar_full}"
		let count=$count+3
	done

	let total=100-$total
	count=0

	while [ $count -lt $total ]; do
		output="${output}${progress_bar_none}" 
		let count=$count+3
	done
	output="$output ] $i/100%"
	echo -ne "$output"

      random_sleep_progress_bar=.01
	sleep $random_sleep_progress_bar
done
echo -e " ${B2}$progress_bar_done${Color_Off}"
}

function Timer () {
      current_wait_time="$wait_time"

      echo " "
      echo -e "${B1}Timer:${Color_Off}"

      while [ "$current_wait_time" -gt -1 ]; do
            echo -ne "${B6}$current_wait_time\033[0K\r${Color_Off}"
            let current_wait_time=$current_wait_time-1
            sleep 1
      done

      sleep 1
      echo 0
}

function CheckNetwork () {
      echo -e "${C5}Checking network connection...${Color_Off}"
      wget --spider --quiet http://google.com
      if [ "$?" != 0 ]; then
            sleep 3
            echo ""
            echo -e "${B1}ERROR: Your computer is not connected to any network, please make sure it is connected to the internet${Color_Off} $progress_bar_error"
            sleep 3
            echo ""
            echo -e "${C5}Aborting current process...${Color_Off}"
            sleep 1
            exit
      fi
}

function Uninstall () {
      sudo rm -r /usr/bin/cromha-manager &>> "$HOME/cromha-manager-log-$current_date_simple"
      sudo rm -r /usr/bin/cromha-manager-ctl &>> "$HOME/cromha-manager-log-$current_date_simple"
      sudo rm -r $HOME/cromha-manager-config.yaml &>> "$HOME/cromha-manager-log-$current_date_simple"
}

function Logger () {
      echo "$1" &>> "$HOME/cromha-manager-ctl-log-$current_date_simple"
}

# YAML parser
function parse_yaml {
      local prefix=$2
      local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo -e @|tr @ '\034')
      sed -ne "s|^\($s\):|\1|" \
            -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
            -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
      awk -F$fs '{
            indent = length($1)/2;
            vname[indent] = $2;
            for (i in vname) {if (i > indent) {delete vname[i]}}
            if (length($3) > 0) {
                  vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
                  printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
            }
      }'
}
eval "$(parse_yaml $HOME/cromha-manager-config.yaml "CONFIG_")"

# Package managers information (enabled or disabled)

flatpak=$(echo -e "$CONFIG_package_managers_flatpak")
snap=$(echo -e "$CONFIG_package_managers_snapcraft")
yum=$(echo -e "$CONFIG_package_managers_yum")
cargo=$(echo -e "$CONFIG_package_managers_cargo")
dnf=$(echo -e "$CONFIG_package_managers_dnf")
apt=$(echo -e "$CONFIG_package_managers_apt")
zypp=$(echo -e "$CONFIG_package_managers_zypp")

# Color palette variables

C0=$(echo -e "$CONFIG_color_palette_color_0")
C1=$(echo -e "$CONFIG_color_palette_color_1")
C2=$(echo -e "$CONFIG_color_palette_color_2")
C3=$(echo -e "$CONFIG_color_palette_color_3")
C4=$(echo -e "$CONFIG_color_palette_color_4")
C5=$(echo -e "$CONFIG_color_palette_color_5")
C6=$(echo -e "$CONFIG_color_palette_color_6")
C7=$(echo -e "$CONFIG_color_palette_color_7")

B0=$(echo -e "$CONFIG_color_palette_color_B0")
B1=$(echo -e "$CONFIG_color_palette_color_B1")
B2=$(echo -e "$CONFIG_color_palette_color_B2")
B3=$(echo -e "$CONFIG_color_palette_color_B3")
B4=$(echo -e "$CONFIG_color_palette_color_B4")
B5=$(echo -e "$CONFIG_color_palette_color_B5")
B6=$(echo -e "$CONFIG_color_palette_color_B6")
B7=$(echo -e "$CONFIG_color_palette_color_B7")

# Informations variables

version_ver=$(echo -e "$CONFIG_informations_version")

# Settings

wait_time=$(echo -e "$CONFIG_settings_wait_time")

progress_bar_done=$(echo -e "${B2}$CONFIG_settings_progress_bar_done_sprite${Color_Off}")
progress_bar_error=$(echo -e "${B1}$CONFIG_settings_progress_bar_error_sprite${Color_Off}")
progress_bar_none=$(echo -e "${C6}$CONFIG_settings_progress_bar_empty_sprite${Color_Off}")
progress_bar_full=$(echo -e "${B6}$CONFIG_settings_progress_bar_full_sprite${Color_Off}")

prefered_text_editor=$(echo -e "$CONFIG_settings_prefered_text_editor")
prefered_flatpak_repo=$(echo -e "$CONFIG_settings_prefered_flatpak_repo")

user_distro=$(echo -e "$CONFIG_informations_distro")

# Start jobs

if [ "$option" == "" ]; then
      echo
      echo -e "${B1}_________ .__                                          ____________________.____     
\_   ___ \|  |_________  ____   _____ _____            \_   ___ \__    ___/|    |    
/    \  \/|  |  \_  __ \/  _ \ /     \\__  \    ______ /    \  \/ |    |   |    |    
\     \___|   Y  \  | \(  <_> )  Y Y  \/ __ \_ /_____/ \     \____|    |   |    |___ 
 \______  /___|  /__|   \____/|__|_|  (____  /          \______  /|____|   |_______  
        \/     \/                   \/     \/                  \/                  \/
${Color_Off}"
      echo -e "${B6}===============================================================================${normal}"
      echo -e  "${B5}Github Repository${Color_Off}: ${B4}https://github.com/OcelotWalrus/Bash-Multi-Package-Manager${Color_Off}"
      echo -e " "
      echo -e  "${C2}Current version${Color_Off}: ${B3}$version_ver${Color_Off}"
      echo -e "${B6}===============================================================================${normal}"
      echo -e " "
      echo -e  "${C6}A bash script to manage multiple package
managers easily with high customizability.${Color_Off}"
      echo -e " "
      echo -e "Hint: run '$ cromha-manager-ctl help' for help"
      echo -e "Hint: you can check the logs at '$HOME/cromha-manager-ctl-log-$current_date_simple'"
      disable_done=True
fi

# Commands

if [ "$option" == "help" ]; then
      echo -e  "${B2}HELP PAGE:${Color_Off}"
	echo -e " "
	echo -e  "${B5}COMMANDS${normal} ${C3}(First entry):${Color_Off}"
	echo -e " "
	echo -e  "${B6}help${normal}: display this help message"
      echo -e  "${B6}logs/open-logs${normal}: open $HOME/cromha-manager-ctl-log-$current_date_simple to check logs"
      echo -e  "${B6}clean-logs/clean-log${normal}: clean both cromha-manager logs and cromha-manager-ctl-logs (${B0}at $HOME/${Color_Off})"
      echo -e  "${B6}upgrade/update${normal}: upgrade cromha-manager version"
      echo -e  "${B6}uninstall/remove${normal}: uninstall cromha-manager (${B0}and cromha-manager-ctl too${Color_Off})"
      echo -e  "${B6}dnf-optimize${normal}: modify your dnf configuration at /etc/dnf/dnf.conf to optimize it (${B0}add fastestmirror=True; max_parallel_download=10; deltarpm=True; skip_if_unavaible=True${Color_Off})"
fi

if [ "$option" == "upgrade" ] || [ "$option" == "update" ]; then
      echo -e " "
      echo -e "${B1}WARNING: It is normal is there is some error messages at the end of the script, it is because the cromha-manager-ctl have been modified during the patch. But don't worry the update will stil happen. You can still run again the program and you will see no error"
      echo " "
      CheckNetwork
      sleep 3
      echo -e "${C5}Checking GitHub Repo..."
      sleep 2
      echo -e "${C5}Cloning GitHub Repo into $HOME/Cromha-manager (default path)..."
      git clone https://github.com/OcelotWalrus/Bash-Multi-Package-Manager $HOME/Cromha-Manager &>> "$HOME/cromha-manager-log-$current_date_simple"
      echo -e "${C5}Upgrading Cromha-Manager...${Color_Off}"
      echo " "
      echo "[Upgrading Cromha-Manager]"
      cd "$HOME/Cromha-Manager"
      last_patch_info=$(git log -1 --pretty=%B)
      sh install.sh &>> "$HOME/cromha-manager-log-$current_date_simple" & WAIT=$!
      ProgressBarFast & WAIT2=$!
      wait $WAIT
      wait $WAIT2
      echo " "
      echo -e "${C5}Removed cloned github repository used for upgrading..."
      sudo rm -r "$HOME/Cromha-Manager"
      echo " "
      echo -e "${B6}Last patch message: ${Color_Off}'$last_patch_info'"
fi

if [ "$option" == "dnf-optimize" ]; then
      echo -e " "
      echo -e "${C5}Locating dnf conf file..."
      sleep .7
      echo -e "${C5}Reading /etc/dnf/dnf.conf..."
      sleep .5
      echo -e "${C5}Getting parameters to optimize...${Color_Off}"
      sleep .8
      echo -e " "
      echo -e "[Optimizing DNF]"
      ProgressBarFast & PID1=$!
      sudo echo "fastestmirror=True" | sudo tee -a /etc/dnf/dnf.conf &>> "$HOME/cromha-manager-log-$current_date_simple" & PID2=$!
      sudo echo "max_parallel_download=10" | sudo tee -a /etc/dnf/dnf.conf &>> "$HOME/cromha-manager-log-$current_date_simple" & PID3=$!
      sudo echo "deltarpm=True" | sudo tee -a  /etc/dnf/dnf.conf &>> "$HOME/cromha-manager-log-$current_date_simple" & PID4=$!
      sudo echo "skip_if_unavaible=True" | sudo tee -a /etc/dnf/dnf.conf &>> "$HOME/cromha-manager-log-$current_date_simple" & PID5=$!
      wait $PID1
      wait $PID2
      wait $PID3
      wait $PID4
      wait $PID5
fi

if [ "$option" == "logs" ] || [ "$option" == "open-logs" ]; then
      echo -e "${C5}Opening cromha-manager-ctl-log-$current_date_simple...${Color_Off}"
      sleep 1
      $prefered_text_editor "$HOME/cromha-manager-ctl-log-$current_date_simple"
      sleep .1
fi

if [ "$option" == "clean-logs" ] || [ "$option" == "clean-log" ]; then
      echo -e "${C5}Cleaning logs...${Color_Off}"
      sleep 1
      sudo rm -r $HOME/cromha-manager-ctl-log*
      sudo rm -r $HOME/cromha-manager-log*
      sleep .1
fi

if [ "$option" == "uninstall" ] || [ "$option" == "remove" ]; then
      echo -e "${B1}WARNING: It is normal if errors occurs at the end of the script, it is because the nedded files for cromha-manager-ctl to work have been deleted. Even if there is errors, cromha-manager and cromha-manager-ctl will be still removed"
      echo -e " "
      CheckNetwork
      sleep 3
      echo -e "${C5}Locating needed file for the cromha-manager...${Color_Off}"
      echo -e " "
      echo "[Removing/Uninstalling Cromha-Manager]"
      ProgressBar & PID1=$!
      Uninstall & PID2=$!
      wait $PID1
      wait $PID2

fi

if [ "$disable_done" == False ]; then
      echo " "
      echo -e  "${Color_Off}${B6}Done $progress_bar_done${Color_Off}"
fi